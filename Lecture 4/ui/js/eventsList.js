(function () {    //  находим таблицу в DOM и присваиваем переменной    var table = document.getElementsByTagName('table');    //  находим шапку таблицы в DOM и присваиваем переменной    var tableHeadList = document.getElementsByTagName('tHead')[0].rows;    //  находим тело таблицы в DOM и присваиваем переменной    var tableBodyList = document.getElementsByTagName('tBody')[0];    //  находим все заголовки отчетов с классом report-title    var tableBodyTitles = document.getElementsByClassName('report-title');    //  собираем все отчеты в объект коллекций    var reportsObj = createReportsObj(['report-1', 'report-2']);    // собираем в массив Index залоговков в нашей таблице    var tableBodyTitlesId = [];    for (var i = 0; i < tableBodyTitles.length; i++) {        tableBodyTitlesId.push(tableBodyTitles[i].rowIndex);    }// функция для создания обьекта отчетов    function createReportsObj(arr) {        var newReportsObj = {};        for (var i = 0; i < arr.length; i++) {            newReportsObj[arr[i]] = tableBodyList.getElementsByClassName(arr[i]);        }        return newReportsObj;    }    //   создаем переменные для хранения Index позиций ячеек "tr" и строк "td"    var currentElement = 0;    var lastCurrentElement = 0;    var currentRowIndex = 0;    var lastCurrentRowIndex = 1;    //  добавляем событие на клик по таблице    table[0].addEventListener('click', clickElements);    function clickElements(e) {        var target = e.target;        while (target !== this) {            //  проверяем клик в таблице на ячейку с аттрибутом "data-delete"            if (target.hasAttribute('data-delete')) {                //   присваиваем переменной класс удаленной ячейки для поиска по обьекту отчетов                var removedRowClasses = target.parentElement.parentElement.classList;                //   присваиваем переменной текст из первой ячейки удаленной строки (текст = порядковому номеру)                var removedIndex = target.parentElement.parentElement.firstElementChild.innerHTML;                //  удаляем строку                target.parentElement.parentElement.remove();                //  переписываем в коллекции порядковые номера всех ячеек идущих после удаленной (коллекция = название удаленного класса)                for (var i = removedIndex - 1; i < reportsObj[removedRowClasses[0]].length; i++) {                    reportsObj[removedRowClasses[0]][i].children[0].innerHTML = i + 1;                }                return;            }            //  проверяем клик в таблице на ячейку с аттрибутом "data-add"            if (target.getAttribute('data-add') === 'row') {                // создаем элементы для добавления в строку                var deleteRowElement = document.createElement('span');                deleteRowElement.setAttribute('data-delete', 'delete');                deleteRowElement.innerHTML = 'delete row -';                var newRowTpl = document.createElement('tr');                for (var k = 0; k < 5; k++) {                    var newColumnTpl = document.createElement('td');                    if (k > 0 && k <= 3) {                        newColumnTpl.setAttribute('data-used', 'used-td');                    }                    newRowTpl.appendChild(newColumnTpl);                }                //  записываем data attribute title в переменную                var parentRowClass = target.parentElement.parentElement.getAttribute('data-title');                // из обьекта отчетов выбираем последний элемент в коллекции под названием полученным в parentRowClass                // получаем строку вида "  "                //  получаем последний элемент из коллекции с названием = parentRowClass                var reportsAdd = reportsObj[parentRowClass][reportsObj[parentRowClass].length - 1];                //  добавляем новую строку "tr" в таблицу и записываем в переменную                //  находим родительский узел и вставляем новую строку перед следующим элементом идущим после полученного в reportsAdd                var newRow = reportsAdd.parentNode.insertBefore(newRowTpl, reportsAdd.nextSibling);                //  присваиваем порядковый номер в первую ячейку новой строки, равной длине коллекции + 1                newRow.querySelector(':first-child').innerHTML = reportsObj[parentRowClass].length + 1;                //  добавляем кнопку удаления ячейки                newRow.querySelector(':last-child').appendChild(deleteRowElement);                //  добавляем класс ячейке                newRow.className = parentRowClass;                return;            }            //  проверяем клик в таблице на ячейку            if (target.tagName === 'TD') {                //  присваиваем номер ячейки                currentElement = target.cellIndex;                //  присваиваем номер строки в таблице                currentRowIndex = target.parentElement.rowIndex;                //  удаляем класс "selected" из первой ячейки предыдущего клика                tableBodyList.rows[lastCurrentRowIndex - 1].children[0].classList.remove('selected');                //  удаляем из шапки таблицы класс "selected" на ячейке предыдущего клика                tableHeadList[0].children[lastCurrentElement].classList.remove('selected');                //   проверяем клик по той же ячейке                if (currentRowIndex === lastCurrentRowIndex && currentElement === lastCurrentElement) {                    // сбрасываем индексы строки и ячейки предыдущего клика                    lastCurrentElement = 0;                    lastCurrentRowIndex = 1;                    return;                }                //  присваиваем текущие индексы строки и ячейки для следуюшего клика                lastCurrentElement = currentElement;                lastCurrentRowIndex = currentRowIndex;                //  устанавливаем классы "selected" на первую ячейку строки получившей клик, ячейку в шапке по значению индекса элемента                target.parentElement.firstElementChild.className = 'selected';                tableHeadList[0].children[currentElement].className = 'selected';            }            target = target.parentNode;        }    }    //   создаем переменные для хранения Index позиций ячеек "tr" и строк "td" на ховере    var hoveredElement = 0;    var hoveredRowIndex = 1;    var lastHoveredElement = 0;    var lastHoveredRowIndex = 1;    var prevRelatedElement = 0;    var prevRelatedRowIndex = 1;    //  добавляем событие mouseover    table[0].addEventListener('mouseover', changeCellBackground);    function changeCellBackground(e) {        var target = e.target;        var related = e.relatedTarget;        //  отсеиваем ячейки которые не сордержат data-used и не являтюся ячейкой таблицы        if (target.tagName !== 'TD' || target.getAttribute('data-used') !== 'used-td') {            //  убираем активные классы, когда курсор уведен с ячейки таблицы            tableBodyList.rows[hoveredRowIndex - 1].children[hoveredElement].classList.remove('arrive');            tableBodyList.rows[lastHoveredRowIndex - 1].children[lastHoveredElement].classList.remove('leave');            // должны убираться строка и заголовок активной ячейки при уведении курсора с ячейки            tableBodyList.rows[hoveredRowIndex - 1].children[0].classList.remove('arrive');            tableHeadList[0].children[hoveredElement].classList.remove('arrive');            return;        }        //  выделяем активную ячейку        target.classList.add('arrive');        //  получаем индексы ячейки и стороки        hoveredElement = target.cellIndex;        hoveredRowIndex = target.parentElement.rowIndex;        //tableBodyList.rows[lastHoveredRowIndex - 1].children[0].classList.remove('arrive');        //tableHeadList[0].children[lastHoveredElement].classList.remove('arrive');        if (related.tagName === 'TD' || related.getAttribute('data-used') === 'used-td') {            //  удаляем класс из ячейки, которая была "relatedTarget" в прошлом событии            tableBodyList.rows[prevRelatedRowIndex - 1].children[prevRelatedElement].classList.remove('leave');            //  меняем классы у блока с которого пришли            related.classList.remove('arrive');            related.classList.add('leave');            //  убираем класс в строке и заголовке ячейки бывшей "target" в прошлом событии            tableBodyList.rows[lastHoveredRowIndex - 1].children[0].classList.remove('arrive');            tableHeadList[0].children[lastHoveredElement].classList.remove('arrive');            //  записываем индексы ячеек и строк в переменные для следующего собития            prevRelatedElement = related.cellIndex;            prevRelatedRowIndex = related.parentElement.rowIndex;        }        //  записываем индексы ячеек и строк в переменные для следующего собития        lastHoveredElement = hoveredElement;        lastHoveredRowIndex = hoveredRowIndex;        // устанавливаем классы в строке и заголовке ячейки текущего события        target.parentElement.children[0].classList.add('arrive');        tableHeadList[0].children[target.cellIndex].classList.add('arrive');    }})();